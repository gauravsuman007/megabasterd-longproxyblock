name: Maven CI/CD

#on:
# push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#on: [push]
on:
  push:
    tags:
      - "v*"

jobs:
#  build_and_test:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 11
#      uses: actions/setup-java@v1
#      with:
#        java-version: 11
#
#    - name: Build project with Maven
#      run: mvn -B package --file pom.xml

  publish-job:
      permissions: write-all
      runs-on: ubuntu-latest
#      needs: [build_and_test]
      steps:
      - uses: actions/checkout@v2
      - name: version
        run: echo "VERSION_NO=$(grep -oPm1 '(?<=<version>)[^<]+' pom.xml)" >> $GITHUB_ENV
#      - run: echo "${{ env.VERSION_NO }}"
        id: version

      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -B package --file pom.xml -DskipTests

#      - uses: "marvinpinto/action-automatic-releases@latest"
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          prerelease: false
#          automatic_release_tag: "latest"
#          files: |
#            target/*jar-with-dependencies.jar

#      - name: Release
#        uses: softprops/action-gh-release@v1
#        with:
#          files: 


      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.VERSION_NO }}
          tag_name: ${{ env.VERSION_NO }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload jar
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_paths: '["./target/*jar-with-dependencies.jar"]'
#          asset_content_type: application


#      - name: upload jar
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: target/*jar-with-dependencies.jar
##          asset_name: azblogfilter.darwin-amd64.tar.gz
#          asset_content_type: application
#      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
#      - uses: actions/upload-artifact@v1
#        with:
#          name: Package
#          path: staging
